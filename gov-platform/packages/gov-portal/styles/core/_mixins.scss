/* styles/core/_mixins.scss */
@mixin focus-ring($offset: 2px) {
  outline: 3px solid var(--g-focus-ring);
  outline-offset: $offset;
}

$breakpoints: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px
);

/* existing: min-width (up) */
@mixin media($bp) {
  $v: map-get($breakpoints, $bp);
  @if $v == null { @error "Unknown breakpoint `#{$bp}`"; }
  @media (min-width: $v) { @content; }
}

/* NEW: max-width (down) */
@mixin media-down($bp) {
  $v: map-get($breakpoints, $bp);
  @if $v == null { @error "Unknown breakpoint `#{$bp}`"; }
  /* subtract a hair to avoid overlap with the next min-width */
  @media (max-width: calc(#{$v} - 0.02px)) { @content; }
}

/* NEW: between two breakpoints (inclusiveâ€“exclusive) */
@mixin media-between($min, $max) {
  $vmin: map-get($breakpoints, $min);
  $vmax: map-get($breakpoints, $max);
  @if $vmin == null or $vmax == null { @error "Unknown breakpoint(s)"; }
  @media (min-width: $vmin) and (max-width: calc(#{$vmax} - 0.02px)) { @content; }
}

/* Utility to paint surfaces consistently */
@mixin surface($level: 1) {
  @if $level == 1 { background: var(--g-surface-1); }
  @else if $level == 2 { background: var(--g-surface-2); }
  @else if $level == 3 { background: var(--g-surface-3); }
  color: var(--g-fg);
  border: 1px solid var(--g-border);
  border-radius: var(--g-radius);
}

@use "../../core/mixins" as *;
@use "../../core/tokens" as *;

.root { color: var(--g-fg); }

/* outer vertical margin */
.root.my--none { margin-block: 0; }
.root.my--xs   { margin-block: var(--g-s1); }
.root.my--sm   { margin-block: var(--g-s2); }
.root.my--md   { margin-block: var(--g-s3); }

/* gap scale */
.root.gap--xs .group { gap: var(--g-s1); }
.root.gap--sm .group { gap: var(--g-s2); }
.root.gap--md .group { gap: var(--g-s3); }
.root.gap--lg .group { gap: var(--g-s4); }

/* flex orientation (default) */
.flex .group {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}
.flex.horizontal .group {
  flex-direction: row;
  flex-wrap: wrap;
}

/* grid mode (when columns provided) */
.grid .group {
  display: grid;
  grid-template-columns: repeat(var(--cols-xs, 1), minmax(0, 1fr));
}
@include media(sm) { .grid .group { grid-template-columns: repeat(var(--cols-sm, var(--cols-xs, 1)), 1fr); } }
@include media(md) { .grid .group { grid-template-columns: repeat(var(--cols-md, var(--cols-sm, 2)), 1fr); } }
@include media(lg) { .grid .group { grid-template-columns: repeat(var(--cols-lg, var(--cols-md, 2)), 1fr); } }
@include media(xl) { .grid .group { grid-template-columns: repeat(var(--cols-xl, var(--cols-lg, 3)), 1fr); } }

.group { /* container of radio items */ }
.item  { /* hook for label spacing/line-height if needed */ }
